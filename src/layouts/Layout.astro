---
import { ClientRouter } from "astro:transitions";
import Navigation from "@components/Navigation/Navigation";
import "./layout.css";
const { hideMenu } = Astro.props;
---

<!doctype html>
<html lang="en">
   <head>
      <!-- Google tag (gtag.js) -->
      <script
         async
         src="https://www.googletagmanager.com/gtag/js?id=G-BBVY7R3J09"
      ></script>
      <script>
         window.dataLayer = window.dataLayer || [];
         function gtag() {
            dataLayer.push(arguments);
         }
         gtag("js", new Date());
         gtag("config", "G-BBVY7R3J09");
      </script>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
      <link rel="preconnect" href="https://fonts.googleapis.com" />
      <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
      <link
         href="https://fonts.googleapis.com/css2?family=Mulish:ital,wght@0,200..1000;1,200..1000&display=swap"
         rel="stylesheet"
      />
      <meta name="generator" content={Astro.generator} />
      <title>Oscar Castaneda - Portfolio</title>
      <meta
         name="description"
         content="Explore the front-end portfolio of Oscar Castañeda – expert in React, UX design, performance optimization, and scalable web architecture. See real-world projects and innovative UI solutions."
      />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <meta charset="UTF-8" />

      <meta
         property="og:title"
         content="Oscar Castañeda | Front-End Engineer Portfolio"
      />
      <meta
         property="og:description"
         content="Explore the front-end portfolio of Oscar Castañeda – expert in React, UX design, performance optimization, and scalable web architecture."
      />
      <meta property="og:url" content="https://oscarshowcase.com" />
      <meta property="og:type" content="website" />
      <meta
         property="og:image"
         content="https://ocportfolio-images.s3.us-west-2.amazonaws.com/background-images/geometry_6.jpg"
      />
      <!-- Replace with actual image -->

      <ClientRouter />
      <!-- <script src="/script.js" is:inline></script> -->
   </head>
   <body>
      <div class="layout">
         {!hideMenu ? <Navigation client:load /> : null}
         <slot />
      </div>
      <!-- <div id="cursor" class="cursor-effect"></div> -->
      <!-- <canvas id="canvas" width="100%"></canvas> -->
      <script>
         (function () {
            const iframeId =
               new URL(location.href).searchParams.get("iframeId") ||
               "iframe-unknown";

            // Calculate full document height
            function getHeight() {
               const doc = document.documentElement;
               const body = document.body;
               return Math.max(
                  body.scrollHeight,
                  body.offsetHeight,
                  doc.clientHeight,
                  doc.scrollHeight,
                  doc.offsetHeight,
               );
            }

            // Post height to parent (only if changed)
            let lastHeight = 0;
            function sendHeight() {
               const h = getHeight();
               if (h !== lastHeight) {
                  window.parent.postMessage(
                     { type: "iframe-height", iframeId, height: h },
                     "*",
                  );
                  lastHeight = h;
               }
            }

            // Continuous observation loop
            function startHeightLoop() {
               sendHeight();
               requestAnimationFrame(startHeightLoop);
            }

            // Observe dynamic DOM changes
            new ResizeObserver(sendHeight).observe(document.body);
            new MutationObserver(sendHeight).observe(document.body, {
               childList: true,
               subtree: true,
            });

            // Listen for parent requests
            window.addEventListener("message", (e) => {
               if (e.data?.type === "get-height") sendHeight();
            });

            // React to window resize (parent container or CSS changes)
            window.addEventListener("resize", sendHeight);

            // Run on load
            window.addEventListener("load", () => {
               sendHeight();
               setTimeout(sendHeight, 100);
               setTimeout(sendHeight, 300);
               startHeightLoop();
            });

            // In case document is already loaded
            if (
               document.readyState === "complete" ||
               document.readyState === "interactive"
            ) {
               setTimeout(() => {
                  sendHeight();
                  startHeightLoop();
               }, 100);
            }

            // Optional: debug
            setInterval(
               () => console.log("[iframe] height", getHeight()),
               1000,
            );
         })();
      </script>
   </body>
</html>
