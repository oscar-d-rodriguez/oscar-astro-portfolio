---
import Navigation from "@components/Navigation/Navigation";
import "./iframe.css";

const hideMenu = true;
---

<!doctype html>
<html lang="en">
   <head>
      <meta charset="UTF-8" />
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>Responsive Iframe Demo</title>
      <link rel="icon" href="/favicon.svg" />
   </head>
   <body>
      <div class="layout">
         {!hideMenu ? <Navigation client:load /> : null}
         <div class="content">
            <h1>Iframe Content</h1>
            <div class="box">Box 1</div>
            <div class="box">Box 2</div>
            <div class="box">Box 3</div>
            <div class="box">Box 4</div>
            <div class="box">Box 5</div>
            <div class="box">Box 6</div>
            <button id="expandButton">Show/Hide Content</button>
            <div id="extraContent">
               <div class="box">Extra Box 1</div>
               <div class="box">Extra Box 2</div>
               <p>More text to increase the iframe height dynamically.</p>
            </div>
            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>
         </div>
      </div>

      <script is:inline>
         // Toggle extra content on button click
         const expandButton = document.getElementById("expandButton");
         const extraContent = document.getElementById("extraContent");

         expandButton.addEventListener("click", () => {
            if (extraContent.style.display === "none") {
               extraContent.style.display = "block";
            } else {
               extraContent.style.display = "none";
            }
         });

         // Get iframe ID from URL
         const iframeId =
            new URL(location.href).searchParams.get("iframeId") ||
            "iframe-unknown";
         let lastHeight = 0;

         // Height sending function
         function sendHeight() {
            // Force immediate layout recalculation
            document.body.getBoundingClientRect();

            const height = document.body.scrollHeight;

            if (height !== lastHeight) {
               window.parent.postMessage(
                  {
                     type: "iframe-height",
                     iframeId,
                     height,
                  },
                  "*",
               );
               lastHeight = height;
            }
         }

         // MutationObserver for immediate detection
         const observer = new MutationObserver(() => {
            sendHeight();
         });
         observer.observe(document.body, {
            childList: true,
            subtree: true,
            attributes: true,
            attributeFilter: ["style"],
         });

         // Event listeners
         window.addEventListener("resize", sendHeight, { passive: true });
         window.addEventListener("load", sendHeight, { passive: true });

         // Initial height send
         sendHeight();

         setInterval(() => console.log("[iframe] height", lastHeight), 1000);
      </script>
   </body>
</html>
